cmake_minimum_required (VERSION 2.6)

# project (softmax)

# Following `cmake --help-policy CMP0072`
set(OpenGL_GL_PREFERENCE "GLVND")

if(APPLE AND OpenMP_CXX_FOUND)
  # Armadillo uses OpenMP, and on Mac, that means linking the libomp library
  set(ALL_LIBS
    OpenMP::OpenMP_CXX
    OpenGL::GL
    glfw
    ${ARMADILLO_LIBRARY} ${ARMADILLO_LIBRARIES}
    ${LAPACK_LIBRARIES}
    ${OpenCV_LIBS}
    jsoncpp_lib
    )
else()
  set(ALL_LIBS
    OpenGL::GL
    glfw
    ${ARMADILLO_LIBRARY} ${ARMADILLO_LIBRARIES}
    ${LAPACK_LIBRARIES}
    ${OpenCV_LIBS}
    jsoncpp_lib
    )
endif()

if(USE_GLEW)
  list (APPEND ALL_LIBS ${GLEW_LIBRARIES})
endif(USE_GLEW)

file(GLOB SOURCES
  src/*.cpp
  src/visual/*.cpp
  src/core/*.cpp
  src/util/*.cpp
  src/collisions/*.cpp
)

file(GLOB HEADERS
  src/*.h
  src/visual/*.h
  src/core/*.h
  src/util/*.h
  src/collisions/*.h
)

add_library(softmats SHARED ${SOURCES})
# This line suppresses a warning generated by g++ (in error) when compiling stb_image.h:
set_target_properties(softmats PROPERTIES COMPILE_FLAGS "-Wno-unused-but-set-variable" )
get_target_property(JSON_INC_PATH jsoncpp_lib INTERFACE_INCLUDE_DIRECTORIES)
include_directories(${JSON_INC_PATH})

target_include_directories(softmats PUBLIC
  $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}> # so include "morph/blah.h" works
  $<INSTALL_INTERFACE:include>  # <prefix>/include so that include <morph/blah.h> works
)

# Common links
link_directories(${OpenCV_INCLUDE_DIRS})
include_directories(${OpenCV_INCLUDE_DIRS})

target_link_libraries(softmats ${ALL_LIBS}) # Animat specific links

install(TARGETS softmats EXPORT SoftmatsConfig LIBRARY DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)

# Header installation
install(
  FILES ${HEADERS} DESTINATION ${CMAKE_INSTALL_PREFIX}/include/morph/softmats
  )

add_custom_command( TARGET softmats POST_BUILD
				COMMAND ${CMAKE_COMMAND} -E copy_directory "${CMAKE_CURRENT_SOURCE_DIR}/shaders"
				"${CMAKE_CURRENT_BINARY_DIR}/${CMAKE_CFG_INTDIR}/shaders")


message("Copying the shaders from")
message("${CMAKE_CURRENT_SOURCE_DIR}/shaders/")
message("to")
message("${CMAKE_CURRENT_BINARY_DIR}/${CMAKE_CFG_INTDIR}/")
